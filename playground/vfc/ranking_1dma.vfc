void ranking (int no_of_dmas) {
  flag = 0; 
  dataIn_v = *(start); 
  if(dataIn_v == 0) {
    run = 0; 
  } else {
    flag = flag+1;
    get(dataIn, dataIn_v, 1, 0); 
  }
  
  inv rank_inv;
  
  while(flag != 0) (inv rank_inv) {
    k = 0;
    while(k<(buf_size-1)) (inv get_inv) {
      if (run==1 ) { 
        wait(0);
        dataIn_v = *dataIn; 
        if (dataIn_v!=0) {
          get(dataIn, dataIn_v, 1, 0);
          *(SPUbuf + currlen) = dataIn_i;
          currlen = currlen + 1;
        } else { 
          run = 0; 
        }
      } else { skip; } 
      k = k+1; 
    }
 
    inv false_inv;
    
    i = 0; 
    while(i<no_of_dmas) {
      currlen_i = *(currlen+i); 
      if(currlen_i != 0) {  
        wait(i);
        run_i = *(run+i); 
        dataIn_i = *(dataIn+i); 
        if((run_i == 1 ) && (dataIn_i!=0)) { 
          SPUbuf_i = *(SPUbuf+i); 
          *(SPUbuf_i + currlen_i) = dataIn_i;
          *(currlen+i) = currlen_i + 1;
        }
        else{ *(run+i) = 0; }

        currlen_i = *(currlen_i); 
        totlen_i = *(totlen+i); 
        target_i = *(target+i); 
        addr = target_i + totlen_i;
        put(SPUbuf+i, addr, currlen_i, i); 
        *(totlen+i) = totlen_i + currlen_i;
        *(currlen+i) = 0;
      } else { skip; }
      i = i+1; 
    } 

    i = 0; 
    while(i<no_of_dmas) {
      wait(i); 
      run_i = *(run+i); 
      dataIn_i = *(dataIn+i); 
      if((run_i == 1 ) && (dataIn_i!=0)) {
        get(dataIn+i, dataIn_i, 1, i); 
      } else { *(run+i) = 0; }
      i = i+1;
    } 

    
    flag = 0; 
    i = 0; 
    while(i<no_of_dmas) {
      run_i = *(run+i);
      flag = flag + run_i;
      i = i+1; 
    } 
    k = k + 1; 
  }
}
