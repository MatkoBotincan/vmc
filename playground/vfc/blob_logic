import "permissions_logic";


/*************************************
 * Simple subtraction rules 
 *************************************/

rule blob_remove_top:
  | blob(?h,?t,ptop(),?x,?c) |-  blob(?h,?t,ptop(),?x,?d)
without
  ?c!=?d
if
  blob(?h,?t,?p,?x,?c) | |- ?c=?d 


/* This rule decides how to satisfy an existential permission. */

rule blob_remove_split:
  | blob(?h,?t,?p1,?x,?c) |-  blob(?h,?t,_p2,?x,?d)
without
  ?c!=?d
if
  blob(?h,?t,psplit1(?p1),?x,?c) | blob(?h,?t,psplit2(?p1),?x,?c) |- ?c=?d * psplit1(?p1) = _p2 
or 
  blob(?h,?t,?p1,?x,?c) | |- ?c=?d * ?p1 = _p2 


rule blob_remove2:
  | blob(?h,?t,?p1,?x,?c) |-  blob(?h,?t,?p2,?x,?d)
if
  blob(?h,?t,?p1,?x,?c) | |- ?c = ?d * ?p1 = ?p2



/*************************************
 * Rules for contradictions 
 *************************************/

rule blob_blob_left:
  | blob(?h,?t,?p,?x,?c) * blob(?h,?t,?q,?x,?d) |- 
if
  | blob(?h,?t,pjoin(?p,?q),?x,?c) 
    * ?c=?d 
    * pmeet(?p,?q) = pbot() 
  |-


/**************************************
 *  Rules for failed proofs
 **************************************/

rule blob_nil_failed :
  | |- blob(?h,?t,?p,nil(),?c)
if
  | |- blob(?h,?t,?p,nil(),?c) * False

rule blob_not_null :
  blob(?h,?t,?p,?x,?c) | |- ?x!=nil() 
if
  | |-


/**************************************
 *  Rules for permission accounting
 **************************************/

rule blob_perm_bot_left:
  | blob(?h,?t,pbot(),?x,?y) |-
if
  | |-

rule blob_perm_bot_right:
  | |- blob(?h,?t,pbot(),?x,?y)
if
  | |-
