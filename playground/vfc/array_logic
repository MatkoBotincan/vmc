/********************************
 * Array logic with permissions
 ********************************/

import "permissions_logic";
import "blob_logic";
import "listdatatype_logic";


/***********************
 * Simplification rules
 ***********************/

/* Get rid of arrays with length zero */
rule remove_empty_array_left :
  | array(?h,?t,?p,?x,?l,?vs) |-
where
  ?l=0 pureguard
if
  | ?vs = empty() |-

  
rule remove_empty_array_right : 
  | |- array(?h,?t,?p,?x,?l,?vs)
where
  ?l=0 pureguard
if 
  | |- ?vs = empty()


/* Arrays with zero permission reduce to emp */
rule array_perm_bot_left:
  | array(?h,?t,pbot(),?x,?l,?vs) |-
if
  | |-

rule array_perm_bot_right:
  | |- array(?h,?t,pbot(),?x,?l,?vs)
if
  | |-


/*********************************
 * Splitting rules involving blob
 *********************************/

rule blob_array_split:
  | blob(?h,?t,?p1,?y,?v) |- array(?h,?t,?p2,?x,?l,?ws)
where
  !GT(?l,0) * !GE(?y,?x) * !LT(?y,(?x+?l)) pureguard
if
  | blob(?h,?t,?p1,?y,?v) 
  |- array(?h,?t,?p2,?x,(?y-?x),_us) * 
     blob(?h,?t,?p2,?y,_w) *
     array(?h,?t,?p2,(?y+1),((?l-(?y-?x))-1),_vs) *
     ?ws = app(_us,cons(_w,_vs))


rule array_blob_split:
  |  array(?h,?t,?p1,?x,?l,?ws)  |-  blob(?h,?t,?p2,?y,?v)
where
  !GT(?l,0) * !GE(?y,?x) * !LT(?y,(?x+?l)) pureguard
if
  | array(?h,?t,?p1,?x,(?y-?x),_us) * 
    blob(?h,?t,?p1,?y,_w) *
    array(?h,?t,?p1,(?y+1),((?l-(?y-?x))-1),_vs) *
    ?ws = app(_us,cons(_w,_vs))
  |- blob(?h,?t,?p2,?y,?v)


/*****************************
 * Array-array matching rules 
 *****************************/
*
rule array_array_match2:
  | array(?h,?t,?p,?x,?l1,?vs1) |- array(?h,?t,?q,?y,?l2,?vs2)
without
  ?vs1 != ?vs2  ||  array(?h,?t,pbot(),?x,?l1,?vs1)  ||  array(?h,?t,pbot(),?y,?l2,?vs2)
where
  ?x = ?y * ?l1 = ?l2 * !LE(?l1,2) pureguard
if
  array(?h,?t,?p,?x,?l1,?vs1)
  |  
  |- ?vs1 = ?vs2 * ?p = ?q
or
  array(?h,?t,?q,?x,?l1,?vs1)
  | _r = pdiff(?p,?q) * array(?h,?t,_r,?x,?l1,?vs1)
  |- ?vs1 = ?vs2 * !Pless(?q,?p) 
or
  array(?h,?t,?p,?x,?l1,?vs1)
  |  
  |- ?vs1 = ?vs2 * !Pless(?p,?q) * _r = pdiff(?q,?p) * array(?h,?t,_r,?x,?l2,?vs2) 


rule array_array_match:
  | array(?h,?t,?p,?x,?l1,?vs1) |- array(?h,?t,?q,?y,?l2,?vs2)
without
  ?vs1 != ?vs2  ||  array(?h,?t,pbot(),?x,?l1,?vs1)  ||  array(?h,?t,pbot(),?y,?l2,?vs2)
where
  ?x = ?y * ?l1 = ?l2 pureguard
if
  array(?h,?t,?p,?x,?l1,?vs1)
  |  
/*  |- ?vs1 = ?vs2 * ?p = ?q*/
  |- ?p = ?q
or
  array(?h,?t,?q,?x,?l1,?vs1)
  | _r = pdiff(?p,?q) * array(?h,?t,_r,?x,?l1,?vs1)
/*  |- ?vs1 = ?vs2 * !Pless(?q,?p) */
  |- !Pless(?q,?p) 
or
  array(?h,?t,?p,?x,?l1,?vs1)
  |  
/*  |- ?vs1 = ?vs2 * !Pless(?p,?q) * _r = pdiff(?q,?p) * array(?h,?t,_r,?x,?l2,?vs2) */
  |- * !Pless(?p,?q) * _r = pdiff(?q,?p) * array(?h,?t,_r,?x,?l2,?vs2)


rule array_array_diff_match:
  | array(?h,?t,?p,?x1,?lx1,?vsx1) * array(?h,?t,?p,?x2,?lx2,?vs2) |- array(?h,?t,?p,?y1,?ly1,?vys1) * array(?h,?t,?p,?y2,?ly2,?vys2)
without
  array(?h,?t,pbot(),?x1,?lx1,?vsx1) || array(?h,?t,pbot(),?x2,?lx2,?vs2) || array(?h,?t,pbot(),?y1,?ly1,?vys1) || array(?h,?t,pbot(),?y2,?ly2,?vys2)
where
  ?x1 = ?y1 * (?x2+?lx2) = (?y2+?ly2) * (?x2-(?x1+?lx1)) = (?y2-(?y1+?ly1)) pureguard
if
  array(?h,?t,?p,?x1,_l1,_vs1) * array(?h,?t,?p,_y,_l2,_vs2)
  | (_y-(?x1+_l1)) = (?x2-(?x1+?lx1))
  |-


/******************************
 * Array-array splitting rules 
 ******************************/

rule array_array_split_left:
  | array(?h,?t,?p,?x,?l1,?vs1) |- array(?h,?t,?q,?y,?l2,?vs2)
without
  | array(?h,?t,?p,?y,?l2,_ys) |-
where 
  !GT(?l2,0) * !GE(?y,?x) * !LE(?y,(?x+(?l1-?l2))) pureguard
if
  | array(?h,?t,?p,?x,(?y-?x),_us) * 
    array(?h,?t,?p,?y,?l2,_ws) * 
    array(?h,?t,?p,(?y+?l2),((?l1-(?y-?x))-?l2),_vs) * 
    ?vs1 = app(app(_us,_ws),_vs)
  |- array(?h,?t,?q,?y,?l2,?vs2)

  
rule array_array_split_right:
  | array(?h,?t,?q,?y,?l2,?vs2) |- array(?h,?t,?p,?x,?l1,?vs1)
without
  |  |- array(?h,?t,?p,?y,?l2,_ys)
where 
  !GT(?l2,0) * !GE(?y,?x) * !LE(?y,(?x+(?l1-?l2))) pureguard
if
  | array(?h,?t,?q,?y,?l2,?vs2)
  |- array(?h,?t,?p,?x,(?y-?x),_us) * 
     array(?h,?t,?p,?y,?l2,_ws) * 
     array(?h,?t,?p,(?y+?l2),((?l1-(?y-?x))-?l2),_vs) * 
     ?vs1 = app(app(_us,_ws),_vs)
