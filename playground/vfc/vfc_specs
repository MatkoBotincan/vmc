alloc 
{ !GE(@parameter1:,0) } 
{ array(@parameter0:, "byte", ptop(), $ret_v1, @parameter1:, ls(@parameter1:,0)) * Mem($ret_v1, @parameter1:) }

free 
{ array(_h, "byte", ptop(), @parameter0:, _sz, _vs) * Mem(@parameter0:, _sz) } 
{ }

memcpy
{ array(_h, "byte", ptop(), @parameter0:, @parameter2:) * array(_h, "byte", _p, @parameter1:, @parameter2:) } 
{ array(_h, "byte", ptop(), @parameter0:, @parameter2:) * array(_h, "byte", _p, @parameter1:, @parameter2:) }

get
{ array("local", "byte", ptop(), @parameter0:, @parameter2:, _ls) * array("host", "byte", _p, @parameter1:, @parameter2:, _hs) * MFC(@parameter3:, _O) * MFCSlot() * _p != pbot() }
{ MFC(@parameter3:, cons(tuple(@parameter0:, ptop(), @parameter1:, _p, @parameter2:, _hs), _O)) }

put
{ array("local", "byte", _p, @parameter0:, @parameter2:, _ls) * array("host", "byte", ptop(), @parameter1:, @parameter2:, _hs) * MFC(@parameter3:, _O) * MFCSlot() * _p != pbot() }
{ MFC(@parameter3:, cons(tuple(@parameter0:, _p, @parameter1:, ptop(), @parameter2:, _ls), _O))}

wait
{ MFC(@parameter0:,_O) }
{ release(MFC(@parameter0:,_O)) }
