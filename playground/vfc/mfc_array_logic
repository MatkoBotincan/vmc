import "listdatatype_logic";
import "array_logic";


/*************************************
 * rules for matching MFC
 *************************************/

rule MFC_remove:
| MFC(?t,?o) |- MFC(?t,?p) 
without
  ?o!=?p
if
  MFC(?t,?o) | |- ?o=?p 

rule MFC_MFC_contradiction:
  MFC(?t,?O) * MFC(?t,?P) | |- 
if


/******************************************
 * rules for releasing what is owned by MFC
 ******************************************/

/*
rule release_MFC_empty_right:
  | |- release(MFC(?t, empty()))
if
  | |- MFC(?t, empty())

rule release_MFC_cons_right:
  | |- release(MFC(?t, cons(tuple(?d, ?p, ?s, ?q, ?l), ?O)))
if
  | |- array("local", "byte", ?p, ?d, ?l) * array("host", "byte", ?q, ?s, ?l) * release(MFC(?t, ?O)) * MFCSlot()
*/

rule release_MFC_empty_left:
  | release(MFC(?t, empty())) |-
if
  | MFC(?t, empty()) |-

rule release_MFC_cons_left:
  | release(MFC(?t, cons(tuple(?d, ?p, ?s, ?q, ?l), ?O))) |-
if
  | array("local", "byte", ?p, ?d, ?l) * array("host", "byte", ?q, ?s, ?l) * release(MFC(?t, ?O)) * MFCSlot() |-
