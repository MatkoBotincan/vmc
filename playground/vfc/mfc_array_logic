import "listdatatype_logic";


/*************************************
 * rules for matching MFC
 *************************************/

rule MFC_match:
  | MFC(?t1,?l1) |- MFC(?t2,?l2)
without
  ?t1 != ?t2
where
  ?t1 = ?t2 pureguard
if
  MFC(?t1,?l1) | |- ?l1 = ?l2

  
rule MFC_contradiction:
  MFC(?t1,?l1) * MFC(?t2,?l2) | |- 
without
  ?t1 != ?t2
where
  ?t1 = ?t2 pureguard
if


/******************************************
 * rules for releasing what is owned by MFC
 ******************************************/

rule release_MFC_empty_right:
  | |- release(MFC(?t, empty()))
if
  | |- MFC(?t, empty())

rule release_MFC_cons_right:
  | |- release(MFC(?t, cons(tuple(?d, ?p, ?s, ?q, ?l, ?vs), ?O)))
if
  | |- array("local", "byte", ?p, ?d, ?l, ?vs) * array("host", "byte", ?q, ?s, ?l, ?vs) * release(MFC(?t, ?O)) * MFCSlot()


rule release_MFC_empty_left:
  | release(MFC(?t, empty())) |-
if
  | MFC(?t, empty()) |-

rule release_MFC_cons_left:
  | release(MFC(?t, cons(tuple(?d, ?p, ?s, ?q, ?l,?vs), ?O))) |-
if
  | array("local", "byte", ?p, ?d, ?l, ?vs) * array("host", "byte", ?q, ?s, ?l, ?vs) * release(MFC(?t, ?O)) * MFCSlot() |-
